@use "sass:color";
@use 'variables';

// Responsive mixins
@mixin mobile {
  @media (max-width: #{variables.$breakpoint-sm - 1px}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{variables.$breakpoint-sm}) and (max-width: #{variables.$breakpoint-lg - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{variables.$breakpoint-lg}) {
    @content;
  }
}

@mixin respond-to($breakpoint) {
  @media (min-width: #{$breakpoint}) {
    @content;
  }
}

// Flexbox mixins
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Button mixins
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: variables.$spacing-sm variables.$spacing-md;
  border: none;
  border-radius: variables.$radius-md;
  font-family: variables.$font-primary;
  font-size: variables.$font-size-base;
  font-weight: 600;
  text-decoration: none;
  cursor: pointer;
  transition: all variables.$transition-base;

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

@mixin button-primary {
  @include button-base;
  background-color: variables.$ml-blue;
  color: variables.$ml-white;

  &:hover:not(:disabled) {
    background-color: color.adjust(variables.$ml-blue, $lightness: -10%);
  }
}

@mixin button-secondary {
  @include button-base;
  background-color: variables.$ml-light-gray;
  color: variables.$ml-black;

  &:hover:not(:disabled) {
    background-color: color.adjust(variables.$ml-light-gray, $lightness: -10%);
  }
}

// Card mixin
@mixin card {
  background: variables.$ml-white;
  border-radius: variables.$radius-md;
  box-shadow: variables.$shadow-md;
  padding: variables.$spacing-md;
  transition: box-shadow variables.$transition-base;

  &:hover {
    box-shadow: variables.$shadow-lg;
  }
}

// Container mixin
@mixin container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 variables.$spacing-md;

  @include respond-to(variables.$breakpoint-lg) {
    padding: 0 variables.$spacing-lg;
  }
}

// Truncate text
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Visually hidden (for accessibility)
@mixin visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}
